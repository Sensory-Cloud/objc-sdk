// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: v1/assistant/assistant.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class ChatMessage;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum ChatRole

typedef GPB_ENUM(ChatRole) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ChatRole_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  ChatRole_System = 0,
  ChatRole_User = 1,
  ChatRole_Assistant = 2,
};

GPBEnumDescriptor *ChatRole_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ChatRole_IsValidValue(int32_t value);

#pragma mark - AssistantRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface AssistantRoot : GPBRootObject
@end

#pragma mark - ChatMessage

typedef GPB_ENUM(ChatMessage_FieldNumber) {
  ChatMessage_FieldNumber_Role = 1,
  ChatMessage_FieldNumber_Content = 2,
};

GPB_FINAL @interface ChatMessage : GPBMessage

@property(nonatomic, readwrite) ChatRole role;

@property(nonatomic, readwrite, copy, null_resettable) NSString *content;

@end

/**
 * Fetches the raw value of a @c ChatMessage's @c role property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t ChatMessage_Role_RawValue(ChatMessage *message);
/**
 * Sets the raw value of an @c ChatMessage's @c role property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetChatMessage_Role_RawValue(ChatMessage *message, int32_t value);

#pragma mark - TextChatRequest

typedef GPB_ENUM(TextChatRequest_FieldNumber) {
  TextChatRequest_FieldNumber_ModelName = 1,
  TextChatRequest_FieldNumber_MessagesArray = 2,
};

GPB_FINAL @interface TextChatRequest : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *modelName;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ChatMessage*> *messagesArray;
/** The number of items in @c messagesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger messagesArray_Count;

@end

#pragma mark - TextChatResponse

typedef GPB_ENUM(TextChatResponse_FieldNumber) {
  TextChatResponse_FieldNumber_Message = 1,
};

GPB_FINAL @interface TextChatResponse : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) ChatMessage *message;
/** Test to see if @c message has been set. */
@property(nonatomic, readwrite) BOOL hasMessage;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
