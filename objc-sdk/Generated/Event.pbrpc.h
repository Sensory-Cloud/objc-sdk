// Code generated by gRPC proto compiler.  DO NOT EDIT!
// source: v1/event/event.proto

#import <Foundation/Foundation.h>

#if !defined(GPB_GRPC_FORWARD_DECLARE_MESSAGE_PROTO) || !GPB_GRPC_FORWARD_DECLARE_MESSAGE_PROTO
#import "Event.pbobjc.h"
#endif

#if !defined(GPB_GRPC_PROTOCOL_ONLY) || !GPB_GRPC_PROTOCOL_ONLY
#import <ProtoRPC/ProtoService.h>
#import <ProtoRPC/ProtoRPCLegacy.h>
#import <RxLibrary/GRXWriteable.h>
#import <RxLibrary/GRXWriter.h>
#endif

@class SENGGlobalEventSummaryRequest;
@class SENGPublishUsageEventsRequest;
@class SENGPublishUsageEventsResponse;
@class SENGUsageEventListRequest;
@class SENGUsageEventListResponse;
@class SENGUsageEventSummary;

#if !defined(GPB_GRPC_FORWARD_DECLARE_MESSAGE_PROTO) || !GPB_GRPC_FORWARD_DECLARE_MESSAGE_PROTO
#if defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS) && GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
  #import <Protobuf/GPBTimestamp.pbobjc.h>
#else
  #import "GPBTimestamp.pbobjc.h"
#endif
  #import "Validate.pbobjc.h"
  #import "Common.pbobjc.h"
#endif

@class GRPCUnaryProtoCall;
@class GRPCStreamingProtoCall;
@class GRPCCallOptions;
@protocol GRPCProtoResponseHandler;
@class GRPCProtoCall;


NS_ASSUME_NONNULL_BEGIN

@protocol SENGEventService2 <NSObject>

#pragma mark PublishUsageEvents(PublishUsageEventsRequest) returns (PublishUsageEventsResponse)

/**
 * Publishes a list of usage event to the cloud
 * Authorization metadata is required {"authorization": "Bearer <TOKEN>"}
 */
- (GRPCUnaryProtoCall *)publishUsageEventsWithMessage:(SENGPublishUsageEventsRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark GetUsageEventList(UsageEventListRequest) returns (UsageEventListResponse)

/**
 * Obtains a list of events given the filter criteria
 * Authorization metadata is required {"authorization": "Bearer <TOKEN>"}
 */
- (GRPCUnaryProtoCall *)getUsageEventListWithMessage:(SENGUsageEventListRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark GetUsageEventSummary(UsageEventListRequest) returns (UsageEventSummary)

/**
 * Obtains a summary of events given the filter critieria
 * Authorization metadata is required {"authorization": "Bearer <TOKEN>"}
 */
- (GRPCUnaryProtoCall *)getUsageEventSummaryWithMessage:(SENGUsageEventListRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

#pragma mark GetGlobalUsageSummary(GlobalEventSummaryRequest) returns (UsageEventSummary)

/**
 * Obtains a usage summary of events across all specified tenants
 * Authorization metadata is required {"authorization": "Bearer <TOKEN>"}
 */
- (GRPCUnaryProtoCall *)getGlobalUsageSummaryWithMessage:(SENGGlobalEventSummaryRequest *)message responseHandler:(id<GRPCProtoResponseHandler>)handler callOptions:(GRPCCallOptions *_Nullable)callOptions;

@end

/**
 * The methods in this protocol belong to a set of old APIs that have been deprecated. They do not
 * recognize call options provided in the initializer. Using the v2 protocol is recommended.
 */
@protocol SENGEventService <NSObject>

#pragma mark PublishUsageEvents(PublishUsageEventsRequest) returns (PublishUsageEventsResponse)

/**
 * Publishes a list of usage event to the cloud
 * Authorization metadata is required {"authorization": "Bearer <TOKEN>"}
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)publishUsageEventsWithRequest:(SENGPublishUsageEventsRequest *)request handler:(void(^)(SENGPublishUsageEventsResponse *_Nullable response, NSError *_Nullable error))handler;

/**
 * Publishes a list of usage event to the cloud
 * Authorization metadata is required {"authorization": "Bearer <TOKEN>"}
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToPublishUsageEventsWithRequest:(SENGPublishUsageEventsRequest *)request handler:(void(^)(SENGPublishUsageEventsResponse *_Nullable response, NSError *_Nullable error))handler;


#pragma mark GetUsageEventList(UsageEventListRequest) returns (UsageEventListResponse)

/**
 * Obtains a list of events given the filter criteria
 * Authorization metadata is required {"authorization": "Bearer <TOKEN>"}
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)getUsageEventListWithRequest:(SENGUsageEventListRequest *)request handler:(void(^)(SENGUsageEventListResponse *_Nullable response, NSError *_Nullable error))handler;

/**
 * Obtains a list of events given the filter criteria
 * Authorization metadata is required {"authorization": "Bearer <TOKEN>"}
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToGetUsageEventListWithRequest:(SENGUsageEventListRequest *)request handler:(void(^)(SENGUsageEventListResponse *_Nullable response, NSError *_Nullable error))handler;


#pragma mark GetUsageEventSummary(UsageEventListRequest) returns (UsageEventSummary)

/**
 * Obtains a summary of events given the filter critieria
 * Authorization metadata is required {"authorization": "Bearer <TOKEN>"}
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)getUsageEventSummaryWithRequest:(SENGUsageEventListRequest *)request handler:(void(^)(SENGUsageEventSummary *_Nullable response, NSError *_Nullable error))handler;

/**
 * Obtains a summary of events given the filter critieria
 * Authorization metadata is required {"authorization": "Bearer <TOKEN>"}
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToGetUsageEventSummaryWithRequest:(SENGUsageEventListRequest *)request handler:(void(^)(SENGUsageEventSummary *_Nullable response, NSError *_Nullable error))handler;


#pragma mark GetGlobalUsageSummary(GlobalEventSummaryRequest) returns (UsageEventSummary)

/**
 * Obtains a usage summary of events across all specified tenants
 * Authorization metadata is required {"authorization": "Bearer <TOKEN>"}
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (void)getGlobalUsageSummaryWithRequest:(SENGGlobalEventSummaryRequest *)request handler:(void(^)(SENGUsageEventSummary *_Nullable response, NSError *_Nullable error))handler;

/**
 * Obtains a usage summary of events across all specified tenants
 * Authorization metadata is required {"authorization": "Bearer <TOKEN>"}
 *
 * This method belongs to a set of APIs that have been deprecated. Using the v2 API is recommended.
 */
- (GRPCProtoCall *)RPCToGetGlobalUsageSummaryWithRequest:(SENGGlobalEventSummaryRequest *)request handler:(void(^)(SENGUsageEventSummary *_Nullable response, NSError *_Nullable error))handler;


@end


#if !defined(GPB_GRPC_PROTOCOL_ONLY) || !GPB_GRPC_PROTOCOL_ONLY
/**
 * Basic service implementation, over gRPC, that only does
 * marshalling and parsing.
 */
@interface SENGEventService : GRPCProtoService<SENGEventService2, SENGEventService>
- (instancetype)initWithHost:(NSString *)host callOptions:(GRPCCallOptions *_Nullable)callOptions NS_DESIGNATED_INITIALIZER;
+ (instancetype)serviceWithHost:(NSString *)host callOptions:(GRPCCallOptions *_Nullable)callOptions;
// The following methods belong to a set of old APIs that have been deprecated.
- (instancetype)initWithHost:(NSString *)host;
+ (instancetype)serviceWithHost:(NSString *)host;
@end
#endif

NS_ASSUME_NONNULL_END

