// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: v1/assistant/assistant.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class SENAssistantMessage;
@class SENAssistantMessageConfig;
@class SENAssistantPostProcessingActionRequest;
@class SENAssistantPostProcessingActionResponse;
@class SENIntent;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum SENAssistantPostProcessingAction

typedef GPB_ENUM(SENAssistantPostProcessingAction) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  SENAssistantPostProcessingAction_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** Default value to perform no action */
  SENAssistantPostProcessingAction_NotSet = 0,

  /** Indicates the final message has been sent. The server will wrap up and close the stream. */
  SENAssistantPostProcessingAction_Final = 1,
};

GPBEnumDescriptor *SENAssistantPostProcessingAction_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL SENAssistantPostProcessingAction_IsValidValue(int32_t value);

#pragma mark - SENAssistantRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface SENAssistantRoot : GPBRootObject
@end

#pragma mark - SENAssistantMessageRequest

typedef GPB_ENUM(SENAssistantMessageRequest_FieldNumber) {
  SENAssistantMessageRequest_FieldNumber_Config = 1,
  SENAssistantMessageRequest_FieldNumber_Message = 2,
  SENAssistantMessageRequest_FieldNumber_PostProcessingAction = 10,
};

typedef GPB_ENUM(SENAssistantMessageRequest_StreamingRequest_OneOfCase) {
  SENAssistantMessageRequest_StreamingRequest_OneOfCase_GPBUnsetOneOfCase = 0,
  SENAssistantMessageRequest_StreamingRequest_OneOfCase_Config = 1,
  SENAssistantMessageRequest_StreamingRequest_OneOfCase_Message = 2,
};

/**
 * Request to process a message with a virutal assistant
 **/
GPB_FINAL @interface SENAssistantMessageRequest : GPBMessage

/** The streaming request, which is either a config or content. */
@property(nonatomic, readonly) SENAssistantMessageRequest_StreamingRequest_OneOfCase streamingRequestOneOfCase;

/**
 * Provides information that specifies how to process the
 * request. The first `CreateEnrollmentRequest` message must contain a
 * `config`  message.
 **/
@property(nonatomic, readwrite, strong, null_resettable) SENAssistantMessageConfig *config;

/**
 * The data to be recognized. Sequential chunks of data are sent
 * in sequential `AssistantMessageRequest` messages. The first
 * `AssistantMessageRequest` message must not contain `config` data
 * and all subsequent `AssistantMessageRequest` messages must contain
 * `message` data.
 **/
@property(nonatomic, readwrite, strong, null_resettable) SENAssistantMessage *message;

/** Message used to instruct the assistant engine to process audio data. */
@property(nonatomic, readwrite, strong, null_resettable) SENAssistantPostProcessingActionRequest *postProcessingAction;
/** Test to see if @c postProcessingAction has been set. */
@property(nonatomic, readwrite) BOOL hasPostProcessingAction;

@end

/**
 * Clears whatever value was set for the oneof 'streamingRequest'.
 **/
void SENAssistantMessageRequest_ClearStreamingRequestOneOfCase(SENAssistantMessageRequest *message);

#pragma mark - SENAssistantMessage

typedef GPB_ENUM(SENAssistantMessage_FieldNumber) {
  SENAssistantMessage_FieldNumber_Text = 1,
  SENAssistantMessage_FieldNumber_AudioContent = 2,
};

typedef GPB_ENUM(SENAssistantMessage_Message_OneOfCase) {
  SENAssistantMessage_Message_OneOfCase_GPBUnsetOneOfCase = 0,
  SENAssistantMessage_Message_OneOfCase_Text = 1,
  SENAssistantMessage_Message_OneOfCase_AudioContent = 2,
};

/**
 * A message from the assistant
 **/
GPB_FINAL @interface SENAssistantMessage : GPBMessage

@property(nonatomic, readonly) SENAssistantMessage_Message_OneOfCase messageOneOfCase;

@property(nonatomic, readwrite, copy, null_resettable) NSString *text;

/** Audio content if requested */
@property(nonatomic, readwrite, copy, null_resettable) NSData *audioContent;

@end

/**
 * Clears whatever value was set for the oneof 'message'.
 **/
void SENAssistantMessage_ClearMessageOneOfCase(SENAssistantMessage *message);

#pragma mark - SENIntent

typedef GPB_ENUM(SENIntent_FieldNumber) {
  SENIntent_FieldNumber_Name = 1,
  SENIntent_FieldNumber_Confidence = 2,
};

/**
 * An intent based on an AssistantMessageRequest
 **/
GPB_FINAL @interface SENIntent : GPBMessage

/** Name of the intent */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** Confidence of the intent as indicated by the engine */
@property(nonatomic, readwrite) double confidence;

@end

#pragma mark - SENAssistantMessageResponse

typedef GPB_ENUM(SENAssistantMessageResponse_FieldNumber) {
  SENAssistantMessageResponse_FieldNumber_Text = 1,
  SENAssistantMessageResponse_FieldNumber_AudioContent = 2,
  SENAssistantMessageResponse_FieldNumber_Intent = 3,
  SENAssistantMessageResponse_FieldNumber_IntentsArray = 4,
  SENAssistantMessageResponse_FieldNumber_IsAudioComplete = 5,
  SENAssistantMessageResponse_FieldNumber_PostProcessingAction = 10,
};

/**
 * Response from a virtual assistant
 **/
GPB_FINAL @interface SENAssistantMessageResponse : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *text;

/** Audio content if requested */
@property(nonatomic, readwrite, copy, null_resettable) NSData *audioContent;

/** The primary intent selected by the engine */
@property(nonatomic, readwrite, strong, null_resettable) SENIntent *intent;
/** Test to see if @c intent has been set. */
@property(nonatomic, readwrite) BOOL hasIntent;

/** A list of the ranked intents as determined by the engine */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<SENIntent*> *intentsArray;
/** The number of items in @c intentsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger intentsArray_Count;

/** Indicates the audio is done streaming */
@property(nonatomic, readwrite) BOOL isAudioComplete;

/** Message used to instruct the assistant engine to process audio data. */
@property(nonatomic, readwrite, strong, null_resettable) SENAssistantPostProcessingActionResponse *postProcessingAction;
/** Test to see if @c postProcessingAction has been set. */
@property(nonatomic, readwrite) BOOL hasPostProcessingAction;

@end

#pragma mark - SENAssistantMessageConfig

typedef GPB_ENUM(SENAssistantMessageConfig_FieldNumber) {
  SENAssistantMessageConfig_FieldNumber_UserId = 2,
  SENAssistantMessageConfig_FieldNumber_DeviceId = 3,
  SENAssistantMessageConfig_FieldNumber_ModelName = 4,
  SENAssistantMessageConfig_FieldNumber_IncludeAudioResponse = 5,
};

/**
 * Provides information for an audio-based enrollment
 **/
GPB_FINAL @interface SENAssistantMessageConfig : GPBMessage

/** The unique user Identifer. This value should be a unique email address or username known by the user. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

/**
 * The unique device Identifer. This value should be something retrieved by the devie prior to enrollment (like MAC Address)
 * this value is used to identify a device uniquely across multiple enrollments
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceId;

/**
 * Name of background model to be enrolled in
 * Background models can be retrieved from the GetModels() gRPC call
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *modelName;

/** Indicates if audio content should be returned along with text and intent content */
@property(nonatomic, readwrite) BOOL includeAudioResponse;

@end

#pragma mark - SENAssistantPostProcessingActionRequest

typedef GPB_ENUM(SENAssistantPostProcessingActionRequest_FieldNumber) {
  SENAssistantPostProcessingActionRequest_FieldNumber_ActionId = 1,
  SENAssistantPostProcessingActionRequest_FieldNumber_Action = 2,
};

/**
 * Action that can be passed along with any audio data. This message instructs the audio engine to
 * perfrom some kind of action after the data is processed.
 **/
GPB_FINAL @interface SENAssistantPostProcessingActionRequest : GPBMessage

/** ID that can be set by the client. This ID will be returned to the client upon a successful flush or reset. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *actionId;

/** The specific action that is being requested. */
@property(nonatomic, readwrite) SENAssistantPostProcessingAction action;

@end

/**
 * Fetches the raw value of a @c SENAssistantPostProcessingActionRequest's @c action property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t SENAssistantPostProcessingActionRequest_Action_RawValue(SENAssistantPostProcessingActionRequest *message);
/**
 * Sets the raw value of an @c SENAssistantPostProcessingActionRequest's @c action property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSENAssistantPostProcessingActionRequest_Action_RawValue(SENAssistantPostProcessingActionRequest *message, int32_t value);

#pragma mark - SENAssistantPostProcessingActionResponse

typedef GPB_ENUM(SENAssistantPostProcessingActionResponse_FieldNumber) {
  SENAssistantPostProcessingActionResponse_FieldNumber_ActionId = 1,
  SENAssistantPostProcessingActionResponse_FieldNumber_Action = 2,
};

/**
 * Action that can be passed along with any audio data. This message instructs the audio engine to
 * perfrom some kind of action after the data is processed.
 **/
GPB_FINAL @interface SENAssistantPostProcessingActionResponse : GPBMessage

/** ID that can be set by the client. This ID will be returned to the client upon a successful flush or reset. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *actionId;

/** The specific action that is being requested. */
@property(nonatomic, readwrite) SENAssistantPostProcessingAction action;

@end

/**
 * Fetches the raw value of a @c SENAssistantPostProcessingActionResponse's @c action property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t SENAssistantPostProcessingActionResponse_Action_RawValue(SENAssistantPostProcessingActionResponse *message);
/**
 * Sets the raw value of an @c SENAssistantPostProcessingActionResponse's @c action property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSENAssistantPostProcessingActionResponse_Action_RawValue(SENAssistantPostProcessingActionResponse *message, int32_t value);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
