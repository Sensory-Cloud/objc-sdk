// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: v1/event/event.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class SENPaginationOptions;
@class SENPaginationResponse;
@class SENUsageEvent;
@class SENUsageEventModelSummary;
@class SENUsageEventResponse;
GPB_ENUM_FWD_DECLARE(SENModelType);
GPB_ENUM_FWD_DECLARE(SENUsageEventType);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - SENEventRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface SENEventRoot : GPBRootObject
@end

#pragma mark - SENPublishUsageEventsRequest

typedef GPB_ENUM(SENPublishUsageEventsRequest_FieldNumber) {
  SENPublishUsageEventsRequest_FieldNumber_EventsArray = 1,
};

/**
 * Request to create a new usage event
 **/
GPB_FINAL @interface SENPublishUsageEventsRequest : GPBMessage

/** A list of events to publish */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<SENUsageEvent*> *eventsArray;
/** The number of items in @c eventsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger eventsArray_Count;

@end

#pragma mark - SENUsageEvent

typedef GPB_ENUM(SENUsageEvent_FieldNumber) {
  SENUsageEvent_FieldNumber_Timestamp = 1,
  SENUsageEvent_FieldNumber_Duration = 2,
  SENUsageEvent_FieldNumber_Id_p = 3,
  SENUsageEvent_FieldNumber_ClientId = 4,
  SENUsageEvent_FieldNumber_Type = 5,
  SENUsageEvent_FieldNumber_Route = 6,
  SENUsageEvent_FieldNumber_TechnologiesArray = 7,
  SENUsageEvent_FieldNumber_ModelsArray = 8,
  SENUsageEvent_FieldNumber_AudioDurationMs = 9,
  SENUsageEvent_FieldNumber_VideoFrameCount = 10,
  SENUsageEvent_FieldNumber_TenantId = 11,
  SENUsageEvent_FieldNumber_BillableFunction = 12,
};

GPB_FINAL @interface SENUsageEvent : GPBMessage

/** The UTC timestamp */
@property(nonatomic, readwrite, strong, null_resettable) GPBTimestamp *timestamp;
/** Test to see if @c timestamp has been set. */
@property(nonatomic, readwrite) BOOL hasTimestamp;

/** The duration of the event in milliseconds */
@property(nonatomic, readwrite) int64_t duration;

/** UUID representing the unique event */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** OAuth ClientID related to the event */
@property(nonatomic, readwrite, copy, null_resettable) NSString *clientId;

/** Type of event to create */
@property(nonatomic, readwrite) enum SENUsageEventType type;

/** The specific route (endpoint) that was accessed */
@property(nonatomic, readwrite, copy, null_resettable) NSString *route;

/** The technologies that were used */
// |technologiesArray| contains |SENTechnologyType|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *technologiesArray;
/** The number of items in @c technologiesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger technologiesArray_Count;

/** The models that were used */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *modelsArray;
/** The number of items in @c modelsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger modelsArray_Count;

/** The duration audio processed in milliseconds */
@property(nonatomic, readwrite) int64_t audioDurationMs;

/** The number of video frames processed */
@property(nonatomic, readwrite) int64_t videoFrameCount;

/** Optional Tenant ID of the event. Used internally by Sensory multi-tenant servers */
@property(nonatomic, readwrite, copy, null_resettable) NSString *tenantId;

/** Billable function, if applicable */
@property(nonatomic, readwrite) enum SENModelType billableFunction;

@end

/**
 * Fetches the raw value of a @c SENUsageEvent's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t SENUsageEvent_Type_RawValue(SENUsageEvent *message);
/**
 * Sets the raw value of an @c SENUsageEvent's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSENUsageEvent_Type_RawValue(SENUsageEvent *message, int32_t value);

/**
 * Fetches the raw value of a @c SENUsageEvent's @c billableFunction property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t SENUsageEvent_BillableFunction_RawValue(SENUsageEvent *message);
/**
 * Sets the raw value of an @c SENUsageEvent's @c billableFunction property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSENUsageEvent_BillableFunction_RawValue(SENUsageEvent *message, int32_t value);

#pragma mark - SENUsageEventResponse

typedef GPB_ENUM(SENUsageEventResponse_FieldNumber) {
  SENUsageEventResponse_FieldNumber_Timestamp = 1,
  SENUsageEventResponse_FieldNumber_Duration = 2,
  SENUsageEventResponse_FieldNumber_Id_p = 3,
  SENUsageEventResponse_FieldNumber_ClientId = 4,
  SENUsageEventResponse_FieldNumber_Type = 5,
  SENUsageEventResponse_FieldNumber_Route = 6,
  SENUsageEventResponse_FieldNumber_TechnologiesArray = 7,
  SENUsageEventResponse_FieldNumber_ModelsArray = 8,
  SENUsageEventResponse_FieldNumber_BillableValue = 9,
  SENUsageEventResponse_FieldNumber_BillableUnits = 10,
  SENUsageEventResponse_FieldNumber_TenantId = 11,
  SENUsageEventResponse_FieldNumber_BillableFunction = 12,
  SENUsageEventResponse_FieldNumber_Credits = 13,
};

GPB_FINAL @interface SENUsageEventResponse : GPBMessage

/** The UTC timestamp */
@property(nonatomic, readwrite, strong, null_resettable) GPBTimestamp *timestamp;
/** Test to see if @c timestamp has been set. */
@property(nonatomic, readwrite) BOOL hasTimestamp;

/** The duration of the event in milliseconds */
@property(nonatomic, readwrite) int64_t duration;

/** UUID representing the unique event */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** OAuth ClientID related to the event */
@property(nonatomic, readwrite, copy, null_resettable) NSString *clientId;

/** Type of event to create */
@property(nonatomic, readwrite) enum SENUsageEventType type;

/** The specific route (endpoint) that was accessed */
@property(nonatomic, readwrite, copy, null_resettable) NSString *route;

/** The technologies that were used */
// |technologiesArray| contains |SENTechnologyType|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *technologiesArray;
/** The number of items in @c technologiesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger technologiesArray_Count;

/** The models that were used */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *modelsArray;
/** The number of items in @c modelsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger modelsArray_Count;

/** The value that is billed for this event */
@property(nonatomic, readwrite) int64_t billableValue;

/** The units of this billed event */
@property(nonatomic, readwrite, copy, null_resettable) NSString *billableUnits;

/** Optional Tenant ID of the event. Used internally by Sensory multi-tenant servers */
@property(nonatomic, readwrite, copy, null_resettable) NSString *tenantId;

/** Billable function, if applicable */
@property(nonatomic, readwrite) enum SENModelType billableFunction;

/** Credits used by this event */
@property(nonatomic, readwrite) double credits;

@end

/**
 * Fetches the raw value of a @c SENUsageEventResponse's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t SENUsageEventResponse_Type_RawValue(SENUsageEventResponse *message);
/**
 * Sets the raw value of an @c SENUsageEventResponse's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSENUsageEventResponse_Type_RawValue(SENUsageEventResponse *message, int32_t value);

/**
 * Fetches the raw value of a @c SENUsageEventResponse's @c billableFunction property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t SENUsageEventResponse_BillableFunction_RawValue(SENUsageEventResponse *message);
/**
 * Sets the raw value of an @c SENUsageEventResponse's @c billableFunction property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSENUsageEventResponse_BillableFunction_RawValue(SENUsageEventResponse *message, int32_t value);

#pragma mark - SENUsageEventListRequest

typedef GPB_ENUM(SENUsageEventListRequest_FieldNumber) {
  SENUsageEventListRequest_FieldNumber_TenantId = 1,
  SENUsageEventListRequest_FieldNumber_Pagination = 2,
  SENUsageEventListRequest_FieldNumber_After = 3,
  SENUsageEventListRequest_FieldNumber_Before = 4,
  SENUsageEventListRequest_FieldNumber_BillableFunctionsArray = 5,
};

GPB_FINAL @interface SENUsageEventListRequest : GPBMessage

/** Optional tenantId which must be a UUID. If this UUID is omitted, it will be inferred from the requestor. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *tenantId;

/** Metadata about how to paginate the response */
@property(nonatomic, readwrite, strong, null_resettable) SENPaginationOptions *pagination;
/** Test to see if @c pagination has been set. */
@property(nonatomic, readwrite) BOOL hasPagination;

/** Optional Start UTC timestamp. Internally this timestamp is rounded to the nearest second. */
@property(nonatomic, readwrite, strong, null_resettable) GPBTimestamp *after;
/** Test to see if @c after has been set. */
@property(nonatomic, readwrite) BOOL hasAfter;

/** Optional End UTC timestamp. Internally this timestamp is rounded to the nearest second. */
@property(nonatomic, readwrite, strong, null_resettable) GPBTimestamp *before;
/** Test to see if @c before has been set. */
@property(nonatomic, readwrite) BOOL hasBefore;

/** Type of event to filter on */
// |billableFunctionsArray| contains |SENModelType|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *billableFunctionsArray;
/** The number of items in @c billableFunctionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger billableFunctionsArray_Count;

@end

#pragma mark - SENUsageEventListResponse

typedef GPB_ENUM(SENUsageEventListResponse_FieldNumber) {
  SENUsageEventListResponse_FieldNumber_EventsArray = 1,
  SENUsageEventListResponse_FieldNumber_Pagination = 2,
};

GPB_FINAL @interface SENUsageEventListResponse : GPBMessage

/** A list of usage events */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<SENUsageEventResponse*> *eventsArray;
/** The number of items in @c eventsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger eventsArray_Count;

/** Metadata about how the response has been paginated */
@property(nonatomic, readwrite, strong, null_resettable) SENPaginationResponse *pagination;
/** Test to see if @c pagination has been set. */
@property(nonatomic, readwrite) BOOL hasPagination;

@end

#pragma mark - SENGlobalEventSummaryRequest

typedef GPB_ENUM(SENGlobalEventSummaryRequest_FieldNumber) {
  SENGlobalEventSummaryRequest_FieldNumber_TenantsArray = 1,
  SENGlobalEventSummaryRequest_FieldNumber_After = 2,
  SENGlobalEventSummaryRequest_FieldNumber_Before = 3,
  SENGlobalEventSummaryRequest_FieldNumber_BillableFunctionsArray = 5,
};

GPB_FINAL @interface SENGlobalEventSummaryRequest : GPBMessage

/** The list of tenants to return data for, If left empty all tenants will be included in the response */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *tenantsArray;
/** The number of items in @c tenantsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger tenantsArray_Count;

/** Optional Start UTC timestamp. Internally this timestamp is rounded to the nearest second. */
@property(nonatomic, readwrite, strong, null_resettable) GPBTimestamp *after;
/** Test to see if @c after has been set. */
@property(nonatomic, readwrite) BOOL hasAfter;

/** Optional End UTC timestamp. Internally this timestamp is rounded to the nearest second. */
@property(nonatomic, readwrite, strong, null_resettable) GPBTimestamp *before;
/** Test to see if @c before has been set. */
@property(nonatomic, readwrite) BOOL hasBefore;

/** Type of event to filter on, If left empty all event types will be included */
// |billableFunctionsArray| contains |SENModelType|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *billableFunctionsArray;
/** The number of items in @c billableFunctionsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger billableFunctionsArray_Count;

@end

#pragma mark - SENUsageEventSummary

typedef GPB_ENUM(SENUsageEventSummary_FieldNumber) {
  SENUsageEventSummary_FieldNumber_SummariesArray = 1,
};

GPB_FINAL @interface SENUsageEventSummary : GPBMessage

/** List of summaries organized by type */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<SENUsageEventModelSummary*> *summariesArray;
/** The number of items in @c summariesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger summariesArray_Count;

@end

#pragma mark - SENUsageEventModelSummary

typedef GPB_ENUM(SENUsageEventModelSummary_FieldNumber) {
  SENUsageEventModelSummary_FieldNumber_BillableFunction = 1,
  SENUsageEventModelSummary_FieldNumber_Units = 2,
  SENUsageEventModelSummary_FieldNumber_Value = 3,
  SENUsageEventModelSummary_FieldNumber_Count = 4,
  SENUsageEventModelSummary_FieldNumber_Credits = 5,
  SENUsageEventModelSummary_FieldNumber_TenantId = 6,
};

GPB_FINAL @interface SENUsageEventModelSummary : GPBMessage

/** Function of the model used */
@property(nonatomic, readwrite) enum SENModelType billableFunction;

/** Units of measure for the summary value */
@property(nonatomic, readwrite, copy, null_resettable) NSString *units;

/** The value of the summary */
@property(nonatomic, readwrite) int64_t value;

/** The number of events included in the summary */
@property(nonatomic, readwrite) int64_t count;

/** Credits used by this event */
@property(nonatomic, readwrite) double credits;

/** Tenant that the events are from. For summaries that span multiple tenants, this field will be empty */
@property(nonatomic, readwrite, copy, null_resettable) NSString *tenantId;

@end

/**
 * Fetches the raw value of a @c SENUsageEventModelSummary's @c billableFunction property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t SENUsageEventModelSummary_BillableFunction_RawValue(SENUsageEventModelSummary *message);
/**
 * Sets the raw value of an @c SENUsageEventModelSummary's @c billableFunction property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetSENUsageEventModelSummary_BillableFunction_RawValue(SENUsageEventModelSummary *message, int32_t value);

#pragma mark - SENPublishUsageEventsResponse

/**
 * Response to a publish events request
 **/
GPB_FINAL @interface SENPublishUsageEventsResponse : GPBMessage

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
