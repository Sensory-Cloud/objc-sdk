// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: v1/management/device.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class SENDeviceResponse;
@class SENGenericClient;
@class SENPaginationOptions;
@class SENPaginationResponse;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - SENDeviceRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface SENDeviceRoot : GPBRootObject
@end

#pragma mark - SENEnrollDeviceRequest

typedef GPB_ENUM(SENEnrollDeviceRequest_FieldNumber) {
  SENEnrollDeviceRequest_FieldNumber_Name = 1,
  SENEnrollDeviceRequest_FieldNumber_DeviceId = 2,
  SENEnrollDeviceRequest_FieldNumber_TenantId = 3,
  SENEnrollDeviceRequest_FieldNumber_Client = 4,
  SENEnrollDeviceRequest_FieldNumber_Credential = 5,
};

/**
 * Request to enroll a new device in the system. Devices can then enroll and associate users with themselves.
 **/
GPB_FINAL @interface SENEnrollDeviceRequest : GPBMessage

/** The friendly name you'd like to associate with this device */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/**
 * The unique internal identifier for this device. Ideally, this value is static for the lifetime of the device.
 * A typical value would be a hardware serial number.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceId;

/** Unique Tenant ID as UUID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *tenantId;

/** OAuth client-specific request details */
@property(nonatomic, readwrite, strong, null_resettable) SENGenericClient *client;
/** Test to see if @c client has been set. */
@property(nonatomic, readwrite) BOOL hasClient;

/**
 * If required, the credential to be validated by the server upon enrollment.
 * Possible values are a shared secret or signed JWT.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *credential;

@end

#pragma mark - SENRenewDeviceCredentialRequest

typedef GPB_ENUM(SENRenewDeviceCredentialRequest_FieldNumber) {
  SENRenewDeviceCredentialRequest_FieldNumber_DeviceId = 1,
  SENRenewDeviceCredentialRequest_FieldNumber_ClientId = 2,
  SENRenewDeviceCredentialRequest_FieldNumber_TenantId = 3,
  SENRenewDeviceCredentialRequest_FieldNumber_Credential = 4,
};

/**
 * Request to renew a device's credential
 **/
GPB_FINAL @interface SENRenewDeviceCredentialRequest : GPBMessage

/**
 * The unique internal identifier for this device. Ideally, this value is static for the lifetime of the device.
 * A typical value would be a hardware serial number.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceId;

/** Unique Client ID as UUID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *clientId;

/** Unique Tenant ID as UUID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *tenantId;

/**
 * The credential to be validated by the server upon enrollment.
 * Possible values are a shared secret or signed JWT.
 **/
@property(nonatomic, readwrite, copy, null_resettable) NSString *credential;

@end

#pragma mark - SENDeviceGetWhoAmIRequest

/**
 * A request to obtain information about the calling device
 **/
GPB_FINAL @interface SENDeviceGetWhoAmIRequest : GPBMessage

@end

#pragma mark - SENDeviceRequest

typedef GPB_ENUM(SENDeviceRequest_FieldNumber) {
  SENDeviceRequest_FieldNumber_DeviceId = 1,
};

/**
 * A request for a device
 **/
GPB_FINAL @interface SENDeviceRequest : GPBMessage

/** The unique internal identifier for this device. Ideally, this value is static for the lifetime of the device. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceId;

@end

#pragma mark - SENGetDevicesRequest

typedef GPB_ENUM(SENGetDevicesRequest_FieldNumber) {
  SENGetDevicesRequest_FieldNumber_TenantId = 1,
  SENGetDevicesRequest_FieldNumber_Pagination = 2,
  SENGetDevicesRequest_FieldNumber_UserId = 3,
};

GPB_FINAL @interface SENGetDevicesRequest : GPBMessage

/** TenantID to filter on. TenantId validation is handled within the tenant_filter_middleware. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *tenantId;

/** Metadata about how to paginate the response */
@property(nonatomic, readwrite, strong, null_resettable) SENPaginationOptions *pagination;
/** Test to see if @c pagination has been set. */
@property(nonatomic, readwrite) BOOL hasPagination;

/** Optional user id to filter devices by */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

@end

#pragma mark - SENUpdateDeviceRequest

typedef GPB_ENUM(SENUpdateDeviceRequest_FieldNumber) {
  SENUpdateDeviceRequest_FieldNumber_DeviceId = 1,
  SENUpdateDeviceRequest_FieldNumber_Name = 2,
};

/**
 * A request to update the name of a device
 **/
GPB_FINAL @interface SENUpdateDeviceRequest : GPBMessage

/** The unique internal identifier for this device. Ideally, this value is static for the lifetime of the device. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceId;

/** The new name of the device */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

@end

#pragma mark - SENDeviceResponse

typedef GPB_ENUM(SENDeviceResponse_FieldNumber) {
  SENDeviceResponse_FieldNumber_Name = 1,
  SENDeviceResponse_FieldNumber_DeviceId = 2,
};

/**
 * A response containing information about a device
 **/
GPB_FINAL @interface SENDeviceResponse : GPBMessage

/** The friendly name of the device */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** The unique internal identifier for this device. Ideally, this value is static for the lifetime of the device. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceId;

@end

#pragma mark - SENGetDeviceResponse

typedef GPB_ENUM(SENGetDeviceResponse_FieldNumber) {
  SENGetDeviceResponse_FieldNumber_Name = 1,
  SENGetDeviceResponse_FieldNumber_DeviceId = 2,
  SENGetDeviceResponse_FieldNumber_UserCount = 3,
};

/**
 * A response containing information about a device and associated users
 **/
GPB_FINAL @interface SENGetDeviceResponse : GPBMessage

/** The friendly name of the device */
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

/** The unique internal identifier for this device. Ideally, this value is static for the lifetime of the device. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceId;

/** The count of total users that are linked to the device */
@property(nonatomic, readwrite) int64_t userCount;

@end

#pragma mark - SENDeviceListResponse

typedef GPB_ENUM(SENDeviceListResponse_FieldNumber) {
  SENDeviceListResponse_FieldNumber_DevicesArray = 1,
  SENDeviceListResponse_FieldNumber_Pagination = 2,
};

/**
 * A response containing multiple devices
 **/
GPB_FINAL @interface SENDeviceListResponse : GPBMessage

/** A list of devices */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<SENDeviceResponse*> *devicesArray;
/** The number of items in @c devicesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger devicesArray_Count;

/** Metadata about how the response has been paginated */
@property(nonatomic, readwrite, strong, null_resettable) SENPaginationResponse *pagination;
/** Test to see if @c pagination has been set. */
@property(nonatomic, readwrite) BOOL hasPagination;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
